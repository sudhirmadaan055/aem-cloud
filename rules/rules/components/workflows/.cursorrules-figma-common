# AEM Figma Integration Workflow

## ЁЯЪи MANDATORY: Rule File Behavior - NO EXCEPTIONS (AI Reference Only)

**тЪая╕П CRITICAL: ALWAYS read this rule file first before executing any Figma-to-AEM component development tasks:**
1. **ЁЯЪи MANDATORY: ALWAYS read the rule file first** - **NO EXCEPTIONS**
2. **ЁЯЪи MANDATORY: Follow all Figma integration rules exactly** - **NO MODIFICATIONS**
3. **ЁЯЪи MANDATORY: Apply best practices as specified** - **NO SKIPPING**
4. **ЁЯЪи MANDATORY: Reference other rule files when mentioned** - **NO IGNORING**

## ЁЯЪи CRITICAL: STEP 0 - FIGMA URL VALIDATION AND EXTRACTION (AI Reference Only)

**тЪая╕П CRITICAL: BEFORE ANY OTHER STEP, ALWAYS VALIDATE FIGMA URL FIRST:**
1. **ЁЯЪи MANDATORY: Extract file key from Figma URL** - Parse URL to get file key
2. **ЁЯЪи MANDATORY: Extract node ID if provided** - Get specific node ID from URL parameters
3. **ЁЯЪи MANDATORY: Validate URL format** - Ensure it's a valid Figma design URL
4. **ЁЯЪи MANDATORY: Connect to Figma MCP server** - Use `mcp_figma_get_figma_data` tool
5. **ЁЯЪи MANDATORY: Verify file access** - Confirm file is accessible and readable
6. **ЁЯЪи MANDATORY: Display file information** - Show file name, last modified, component count

**ЁЯЪи CRITICAL: THIS STEP CANNOT BE SKIPPED, COMBINED, OR MODIFIED - NO EXCEPTIONS**

## ЁЯЪи USER INTERFACE - FIGMA URL INPUT

**Please provide your Figma URL:**

**ЁЯЪи CRITICAL: THIS STEP IS MANDATORY FOR ALL FIGMA URLS - NO EXCEPTIONS**

## ЁЯЪи CRITICAL: STEP 1 - MANDATORY : COMPONENT IDENTIFICATION AND ANALYSIS (AI Reference Only)

**тЪая╕П CRITICAL: ALWAYS PERFORM COMPONENT TYPE DETECTION FIRST:**

1. **ЁЯЪи MANDATORY: Read `rules/rules/components/analysis/.cursorrules-design-analysis-interactive` FIRST** - **NO EXCEPTIONS**
2. **ЁЯЪи MANDATORY: THOROUGHLY analyze Figma data structure** - Examine ALL child nodes, frames, groups, and elements
3. **ЁЯЪи MANDATORY: Look for pagination indicators** - Scan for dots, rectangles, circles that could be slide indicators
4. **ЁЯЪи MANDATORY: Detect carousel elements** - Multiple slides, navigation arrows, slide indicators, pagination dots
5. **ЁЯЪи MANDATORY: Detect listing elements** - Search boxes, filters, pagination, sorting controls
6. **ЁЯЪи MANDATORY: Detect visual elements** - Decorative illustrations, background images, icons, graphics
7. **ЁЯЪи MANDATORY: Look for multiple similar content blocks** - Repeated content structures with different data
8. **ЁЯЪи MANDATORY: Classify component type using interactive analysis rules** - Follow exact classification criteria
9. **ЁЯЪи MANDATORY: Determine complexity based on component type** - Carousel=Medium, Listing=High, Static=Simple
10. **ЁЯЪи MANDATORY: Identify interactive elements** - Buttons, navigation controls, form elements
11. **ЁЯЪи MANDATORY: Identify visual elements** - Decorative images, icons, graphics that need dialog fields
12. **ЁЯЪи MANDATORY: DOUBLE-CHECK analysis** - Re-examine Figma data for missed navigation elements

**ЁЯЪи MANDATORY: COMPONENT TYPE DETECTION RULES - CRITICAL FOR ACCURACY (AI Reference Only)**

#### **ЁЯЪи MANDATORY: LAYOUT STRUCTURE ANALYSIS (AI Reference Only)**
**Always analyze layout structure for:**
- **Two-column layouts** - Left column for content, right column for interactive elements
- **Multi-column layouts** - Complex grid structures with multiple content areas
- **Carousel positioning** - Navigation controls positioned at bottom or sides
- **Content hierarchy** - Primary content vs secondary content areas
- **Visual element placement** - Decorative illustrations, background images, icons

#### **ЁЯЪи MANDATORY: MULTIFIELD REQUIREMENTS DETECTION (AI Reference Only)**
**Look for repeatable content patterns:**
- **Multiple similar cards** - Article cards, product cards, testimonial cards
- **Repeated content blocks** - Same structure with different data
- **List-like structures** - Multiple items with similar properties
- **Form-like structures** - Multiple input fields or data entry points

#### **ЁЯЪи MANDATORY: CAROUSEL COMPONENT DETECTION (AI Reference Only)**
**Carousel components have:**
- **Navigation arrows** (previous/next buttons, left/right arrows)
- **Navigation indicators** (dots, thumbnails, slide indicators)
- **Slide-based content** (multiple slides/panels with content)
- **Auto-play functionality** (automatic slide transitions)
- **Touch/swipe support** (mobile gesture support)
- **Static content** (pre-configured slides, no dynamic queries)

#### **ЁЯЪи MANDATORY: LISTING COMPONENT DETECTION (AI Reference Only)**
**Listing components have:**
- **Search functionality** (search input fields, search buttons)
- **Filter controls** (dropdown filters, checkbox filters, tag filters)
- **Sorting options** (sort dropdowns, sort buttons)
- **Pagination controls** (page numbers, "Load More" buttons)
- **Dynamic content loading** (AJAX requests, infinite scroll)
- **Database/repository queries** (Query Builder, JCR queries)

**ЁЯЪи MANDATORY: COMPONENT IDENTIFICATION AND ANALYSIS CONTINUATION:**

8. **ЁЯЪи MANDATORY: For page designs** - Identify all distinct components across breakpoints (Desktop, Mobile, Tablet)
9. **ЁЯЪи MANDATORY: For single components** - Focus on the specific component instance only
10. **ЁЯЪи MANDATORY: Analyze component variants** - Check for different states and sizes
11. **ЁЯЪи MANDATORY: Map visual elements** - Identify text, images, buttons, containers
12. **ЁЯЪи MANDATORY: Identify decorative elements** - Scan for illustrations, icons, graphics that need dialog fields
13. **ЁЯЪи MANDATORY: Identify reusable elements** - Find patterns that can be separate components
14. **ЁЯЪи MANDATORY: Use actual Figma component names** - Extract exact component names, titles, and headings from Figma data
15. **ЁЯЪи MANDATORY: Never create generic names** - Always use the actual text content from Figma for component identification
16. **ЁЯЪи MANDATORY: Extract content for default values** - Get all text content for dialog fields
17. **ЁЯЪи MANDATORY: Extract visual content for dialog fields** - Get all images, icons, graphics for pathfield dialogs
18. **ЁЯЪи MANDATORY: Map design tokens** - Extract colors, fonts, spacing for styling
19. **ЁЯЪи MANDATORY: Identify responsive requirements** - Check for different breakpoints

**ЁЯЪи MANDATORY: CHECK FOR EXISTING COMPONENTS (AI Reference Only)**

1. **ЁЯЪи MANDATORY: Search existing AEM components** - Use `codebase_search` to find similar components
2. **ЁЯЪи MANDATORY: Check component names** - Look for exact matches or similar naming patterns
3. **ЁЯЪи MANDATORY: Compare functionality** - Match component types and interactive elements
4. **ЁЯЪи MANDATORY: Identify existing vs new** - Categorize components as existing, modified, or new

**ЁЯЪи MANDATORY: DISPLAY COMPONENT ANALYSIS TABLE - REQUIRED FORMAT:**

```
**Component Analysis:**

| # | Component Name | Type | Complexity | Interactive Elements | Visual Elements |
|---|----------------|------|------------|---------------------|-----------------|
| 1 | [Component Name] | [Type] | [Complexity] | [Interactive Elements] | [Visual Elements] |

**Component Count:** 1 distinct component identified in the Figma file

**Existing Components (X):**
- [Component Name] - [Reason for match]

**Modified Components (X):**
- [Component Name] - [What needs modification]

**New Components (X):**
- [Component Name]

**Summary by Type:**
- **[Type] Components (1):** [Component Name]

**Summary by Complexity:**
- **[Complexity] (1):** [Component Name]

**Visual Elements Detected:**
- **Decorative Illustrations:** [Count] - [Description]
- **Background Images:** [Count] - [Description]
- **Icon Elements:** [Count] - [Description]
- **Asset References:** [Count] - [Description]
```

**тЪая╕П CRITICAL: GENERATE AEM COMPONENTS FROM FIGMA DATA:**

**ЁЯЪи CRITICAL: THIS STEP CREATES PRODUCTION-READY COMPONENTS - NO EXCEPTIONS**

## ЁЯЪи CRITICAL: STEP 4 - QUALITY ASSURANCE AND TESTING (AI Reference Only)

**тЪая╕П CRITICAL: ENSURE COMPONENT QUALITY AND COMPLIANCE:**
1. **ЁЯЪи MANDATORY: Generate unit tests** - Create comprehensive test classes
2. **ЁЯЪи MANDATORY: Validate against code quality rules** - Check against Excel file rules
3. **ЁЯЪи MANDATORY: Verify design accuracy** - Ensure components match Figma design exactly
4. **ЁЯЪи MANDATORY: Test content extraction** - Verify default values match Figma content
5. **ЁЯЪи MANDATORY: Validate AEM compliance** - Ensure Cloud Service compatibility
6. **ЁЯЪи MANDATORY: Check responsive behavior** - Verify mobile/tablet/desktop layouts
7. **ЁЯЪи MANDATORY: Validate accessibility** - Ensure proper ARIA labels and semantic HTML
8. **ЁЯЪи MANDATORY: Test component integration** - Verify components work together

**ЁЯЪи CRITICAL: THIS STEP ENSURES PRODUCTION QUALITY - NO EXCEPTIONS**

## ЁЯЪи CRITICAL: FIGMA-SPECIFIC RULES (AI Reference Only)

**тЪая╕П CRITICAL: FIGMA INTEGRATION REQUIREMENTS:**
1. **ЁЯЪи MANDATORY: Always use MCP tools** - Use `mcp_figma_get_figma_data` and `mcp_figma_download_figma_images`
2. **ЁЯЪи MANDATORY: Extract exact content** - Get actual text content from Figma for default values
3. **ЁЯЪи MANDATORY: Preserve design accuracy** - Maintain pixel-perfect accuracy from Figma
4. **ЁЯЪи MANDATORY: Use design tokens** - Apply extracted colors, fonts, spacing consistently
5. **ЁЯЪи MANDATORY: Handle component variants** - Support different states and sizes
6. **ЁЯЪи MANDATORY: Manage assets properly** - Download and optimize images from Figma
7. **ЁЯЪи MANDATORY: Maintain component hierarchy** - Preserve parent-child relationships
8. **ЁЯЪи MANDATORY: Support responsive design** - Handle different breakpoints from Figma

**ЁЯЪи CRITICAL: THESE RULES ARE MANDATORY FOR FIGMA INTEGRATION - NO EXCEPTIONS**

## ЁЯЪи CRITICAL: ERROR HANDLING (AI Reference Only)

**тЪая╕П CRITICAL: HANDLE FIGMA INTEGRATION ERRORS:**
1. **ЁЯЪи MANDATORY: Validate Figma URL format** - Check for proper Figma design URL
2. **ЁЯЪи MANDATORY: Handle MCP connection errors** - Retry or provide clear error messages
3. **ЁЯЪи MANDATORY: Validate file access** - Ensure user has access to the Figma file
4. **ЁЯЪи MANDATORY: Handle missing assets** - Provide fallbacks for missing images
5. **ЁЯЪи MANDATORY: Validate component data** - Ensure extracted data is complete
6. **ЁЯЪи MANDATORY: Handle design system errors** - Provide defaults for missing tokens
7. **ЁЯЪи MANDATORY: Validate AEM project structure** - Ensure proper project setup
8. **ЁЯЪи MANDATORY: Provide clear error messages** - Help user understand and fix issues

**ЁЯЪи CRITICAL: ERROR HANDLING IS MANDATORY - NO EXCEPTIONS**

## ЁЯЪи CRITICAL: SUCCESS CRITERIA (AI Reference Only)

**тЪая╕П CRITICAL: COMPONENT CREATION SUCCESS REQUIREMENTS:**
1. **ЁЯЪи MANDATORY: Exact design match** - Components must match Figma design perfectly
2. **ЁЯЪи MANDATORY: Content accuracy** - All text content must match Figma exactly
3. **ЁЯЪи MANDATORY: Design system compliance** - Must use extracted design tokens
4. **ЁЯЪи MANDATORY: AEM compliance** - Must follow AEM best practices and standards
5. **ЁЯЪи MANDATORY: Code quality** - Must pass all quality checks and tests
6. **ЁЯЪи MANDATORY: Responsive design** - Must work on all device sizes
7. **ЁЯЪи MANDATORY: Accessibility** - Must meet accessibility standards
8. **ЁЯЪи MANDATORY: Performance** - Must be optimized for production use

**ЁЯЪи CRITICAL: ALL SUCCESS CRITERIA MUST BE MET - NO EXCEPTIONS**

## ЁЯЪи CRITICAL: USER NOTIFICATION (AI Reference Only)

**тЪая╕П CRITICAL: KEEP USER INFORMED:**
1. **ЁЯЪи MANDATORY: Show Figma connection status** - Inform user about MCP connection
2. **ЁЯЪи MANDATORY: Display extracted data summary** - Show components, content, assets found
3. **ЁЯЪи MANDATORY: Show component mapping** - Display which AEM components will be created
4. **ЁЯЪи MANDATORY: Display progress updates** - Keep user informed during generation
5. **ЁЯЪи MANDATORY: Show quality check results** - Display test results and compliance status
6. **ЁЯЪи MANDATORY: Provide final summary** - Show what was created and next steps
7. **ЁЯЪи MANDATORY: Display "тЬЕ Figma integration successful"** - Confirm successful completion

**ЁЯЪи CRITICAL: USER NOTIFICATION IS MANDATORY - NO EXCEPTIONS**

## ЁЯЪи CRITICAL: INTEGRATION WITH EXISTING WORKFLOWS (AI Reference Only)

**тЪая╕П CRITICAL: SEAMLESS INTEGRATION:**
1. **ЁЯЪи MANDATORY: Use existing component rules** - Follow `rules/rules/components/frameworks/.cursorrules-aem-components`
2. **ЁЯЪи MANDATORY: Use existing dialog rules** - Follow `rules/rules/components/generation/.cursorrules-aem-dialogs`
3. **ЁЯЪи MANDATORY: Use existing Sling rules** - Follow `rules/rules/technical/.cursorrules-aem-sling`
4. **ЁЯЪи MANDATORY: Use existing Cloud rules** - Follow `rules/rules/technical/.cursorrules-aem-cloud`
5. **ЁЯЪи MANDATORY: Use existing quality rules** - Follow Excel file for code quality
6. **ЁЯЪи MANDATORY: Use existing testing rules** - Follow unit testing requirements
7. **ЁЯЪи MANDATORY: Maintain consistency** - Ensure same quality as image-based workflow

**ЁЯЪи CRITICAL: INTEGRATION IS MANDATORY - NO EXCEPTIONS**

## ЁЯЪи CRITICAL: PERFORMANCE OPTIMIZATION (AI Reference Only)

**тЪая╕П CRITICAL: OPTIMIZE FOR PERFORMANCE:**
1. **ЁЯЪи MANDATORY: Efficient data extraction** - Minimize MCP calls and data transfer
2. **ЁЯЪи MANDATORY: Optimize asset downloads** - Only download required images
3. **ЁЯЪи MANDATORY: Streamline component generation** - Generate components efficiently
4. **ЁЯЪи MANDATORY: Minimize file operations** - Reduce unnecessary file reads/writes
5. **ЁЯЪи MANDATORY: Cache design tokens** - Reuse extracted design system data
6. **ЁЯЪи MANDATORY: Optimize code generation** - Generate clean, efficient code
7. **ЁЯЪи MANDATORY: Minimize user wait time** - Provide quick feedback and progress updates

**ЁЯЪи CRITICAL: PERFORMANCE OPTIMIZATION IS MANDATORY - NO EXCEPTIONS**

## ЁЯЪи CRITICAL: FINAL VALIDATION (AI Reference Only)

**тЪая╕П CRITICAL: COMPREHENSIVE VALIDATION:**
1. **ЁЯЪи MANDATORY: Validate all generated files** - Check HTL, Sling Models, dialogs, SCSS
2. **ЁЯЪи MANDATORY: Verify design accuracy** - Compare with original Figma design
3. **ЁЯЪи MANDATORY: Test component functionality** - Ensure components work as expected
4. **ЁЯЪи MANDATORY: Validate code quality** - Run all quality checks and tests
5. **ЁЯЪи MANDATORY: Check AEM compliance** - Ensure Cloud Service compatibility
6. **ЁЯЪи MANDATORY: Verify responsive design** - Test on different screen sizes
7. **ЁЯЪи MANDATORY: Validate accessibility** - Check ARIA labels and semantic HTML
8. **ЁЯЪи MANDATORY: Confirm user requirements** - Ensure all user needs are met

**ЁЯЪи CRITICAL: FINAL VALIDATION IS MANDATORY - NO EXCEPTIONS**

---

**ЁЯЪи CRITICAL: THIS WORKFLOW IS MANDATORY FOR ALL FIGMA INTEGRATION TASKS - NO EXCEPTIONS**

**тЪая╕П REMEMBER: This workflow ensures pixel-perfect, production-ready AEM components directly from Figma designs with zero manual intervention required.**
