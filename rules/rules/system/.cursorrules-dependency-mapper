# MANDATORY RULE FILE DEPENDENCY MAPPER

## 🚨 CRITICAL: DEPENDENCY MAPPING SYSTEM - NO EXCEPTIONS

**⚠️ CRITICAL: This file maps ALL rule file dependencies and MUST be followed exactly**

### **🚨 MANDATORY: CORE DEPENDENCY CHAIN - NO EXCEPTIONS**

**⚠️ CRITICAL: ALWAYS follow this exact dependency chain:**

#### **Level 1: Core Entry Points**
1. **`rules/rules/core/.cursorrules`** → Main options (1, 2, or 3)
   - **Dependencies**: None (entry point)
   - **References**: `rules/rules/core/.cursorrules-project-creation`, `rules/rules/core/.cursorrules-component-workflow`, `rules/rules/core/.cursorrules-template-workflow`

#### **Level 2: Main Workflows**
2. **`rules/rules/core/.cursorrules-project-creation`** → Project creation process
   - **Dependencies**: `rules/rules/core/.cursorrules` (must be read first)
   - **References**: None (self-contained)

3. **`rules/rules/core/.cursorrules-component-workflow`** → Component development process
   - **Dependencies**: `rules/rules/core/.cursorrules` (must be read first)
   - **References**: Multiple component and technical rule files

4. **`rules/rules/core/.cursorrules-template-workflow`** → Template creation process
   - **Dependencies**: `rules/rules/core/.cursorrules` (must be read first)
   - **References**: Component workflows, Figma workflow, technical rule files

#### **Level 3: Template Analysis (Referenced by template-workflow)**
5. **`rules/rules/components/workflows/.cursorrules-figma-page-workflow`** → Figma component creation
   - **Dependencies**: `rules/rules/core/.cursorrules-template-workflow` (when Figma source selected)
   - **References**: Component workflow files

6. **`rules/rules/core/.cursorrules-component-workflow`** → Image-based component creation
   - **Dependencies**: `rules/rules/core/.cursorrules-template-workflow` (when website source selected)
   - **References**: Component analysis files

#### **Level 4: Component Analysis (Referenced by component-workflow)**
7. **`rules/rules/components/analysis/.cursorrules-design-analysis`** → 9-step analysis process
   - **Dependencies**: `rules/rules/core/.cursorrules-component-workflow` (must be read first)
   - **References**: None (self-contained)

8. **`rules/rules/components/generation/.cursorrules-aem-component-structure`** → File structure rules
   - **Dependencies**: `rules/rules/core/.cursorrules-component-workflow` (must be read first)
   - **References**: None (self-contained)

9. **`rules/rules/components/generation/.cursorrules-htl-best-practices`** → HTL implementation
   - **Dependencies**: `rules/rules/core/.cursorrules-component-workflow` (must be read first)
   - **References**: None (self-contained)

10. **`rules/rules/components/generation/.cursorrules-aem-dialogs`** → Dialog configuration
    - **Dependencies**: `rules/rules/core/.cursorrules-component-workflow` (must be read first)
    - **References**: None (self-contained)

11. **`rules/rules/components/frameworks/.cursorrules-aem-complexity`** → Complexity levels
    - **Dependencies**: `rules/rules/core/.cursorrules-component-workflow` (must be read first)
    - **References**: None (self-contained)

12. **`rules/rules/components/workflows/.cursorrules-aem-listing`** → Listing framework
    - **Dependencies**: `rules/rules/core/.cursorrules-component-workflow` (must be read first)
    - **References**: None (self-contained)

13. **`rules/rules/components/frameworks/.cursorrules-aem-components`** → General best practices
    - **Dependencies**: `rules/rules/core/.cursorrules-component-workflow` (must be read first)
    - **References**: None (self-contained)

#### **Level 4: Technical Implementation (Referenced by component-workflow)**
14. **`rules/rules/technical/.cursorrules-aem-cloud`** → Cloud Service compliance
    - **Dependencies**: `rules/rules/core/.cursorrules-component-workflow` (must be read first)
    - **References**: None (self-contained)

15. **`rules/rules/technical/.cursorrules-aem-sling`** → Sling framework
    - **Dependencies**: `rules/rules/core/.cursorrules-component-workflow` (must be read first)
    - **References**: None (self-contained)

16. **`rules/rules/technical/.cursorrules-aem-i18n`** → Internationalization
    - **Dependencies**: `rules/rules/core/.cursorrules-component-workflow` (must be read first)
    - **References**: None (self-contained)

17. **`rules/rules/technical/.cursorrules-maven`** → Maven build
    - **Dependencies**: `rules/rules/core/.cursorrules-component-workflow` (must be read first)
    - **References**: None (self-contained)

18. **`rules/rules/compliance/.cursorrules-content-filtering`** → Content violation prevention
    - **Dependencies**: `rules/rules/core/.cursorrules` (must be read first)
    - **References**: None (self-contained)

19. **`rules/rules/compliance/.cursorrules-listing-enforcement`** → Listing component violation prevention
    - **Dependencies**: `rules/rules/core/.cursorrules` (must be read first)
    - **References**: `rules/rules/components/workflows/.cursorrules-aem-listing` (framework approach)

### **🚨 MANDATORY: DEPENDENCY READING ORDER - NO EXCEPTIONS**

**⚠️ CRITICAL: ALWAYS read rule files in this exact order:**

#### **For Project Creation (Option 1):**
1. **`rules/rules/core/.cursorrules`** → Main options
2. **`rules/rules/core/.cursorrules-project-creation`** → Project creation process
3. **`rules/rules/compliance/.cursorrules-mandatory-compliance`** → Compliance system
4. **`rules/rules/compliance/.cursorrules-compliance-checklist`** → Compliance checklist
5. **`rules/rules/compliance/.cursorrules-content-filtering`** → Content violation prevention

#### **For Component Development (Option 2):**
1. **`rules/rules/core/.cursorrules`** → Main options
2. **`rules/rules/core/.cursorrules-component-workflow`** → Component development process
3. **`rules/rules/components/analysis/.cursorrules-design-analysis`** → 9-step analysis process
4. **`rules/rules/components/generation/.cursorrules-aem-component-structure`** → File structure rules
5. **`rules/rules/components/generation/.cursorrules-htl-best-practices`** → HTL implementation
6. **`rules/rules/components/generation/.cursorrules-aem-dialogs`** → Dialog configuration
7. **`rules/rules/components/frameworks/.cursorrules-aem-complexity`** → Complexity levels
8. **`rules/rules/components/workflows/.cursorrules-aem-listing`** → Listing framework
9. **`rules/rules/components/frameworks/.cursorrules-aem-components`** → General best practices
10. **`rules/rules/technical/.cursorrules-aem-cloud`** → Cloud Service compliance
11. **`rules/rules/technical/.cursorrules-aem-sling`** → Sling framework
12. **`rules/rules/technical/.cursorrules-aem-i18n`** → Internationalization
13. **`rules/rules/technical/.cursorrules-maven`** → Maven build
14. **`rules/rules/compliance/.cursorrules-mandatory-compliance`** → Compliance system
15. **`rules/rules/compliance/.cursorrules-compliance-checklist`** → Compliance checklist
16. **`rules/rules/compliance/.cursorrules-content-filtering`** → Content violation prevention
17. **`rules/rules/compliance/.cursorrules-listing-enforcement`** → Listing component violation prevention

### **🚨 MANDATORY: DEPENDENCY VALIDATION - NO EXCEPTIONS**

**⚠️ CRITICAL: Before proceeding, validate:**

#### **Validation Checklist:**
- [ ] **🚨 MANDATORY: All dependencies read** - Complete dependency chain
- [ ] **🚨 MANDATORY: Reading order followed** - Exact order maintained
- [ ] **🚨 MANDATORY: No skipped files** - All files in chain read
- [ ] **🚨 MANDATORY: No missing references** - All references followed
- [ ] **🚨 MANDATORY: Complete understanding** - All requirements known

### **🚨 MANDATORY: DEPENDENCY ENFORCEMENT - NO EXCEPTIONS**

**⚠️ CRITICAL: This dependency map is MANDATORY:**

1. **🚨 MANDATORY: No action without dependency reading** - Not allowed
2. **🚨 MANDATORY: No skipping of dependencies** - Not allowed
3. **🚨 MANDATORY: No wrong reading order** - Not allowed
4. **🚨 MANDATORY: No missing references** - Not allowed

### **🚨 MANDATORY: DEPENDENCY SUCCESS CRITERIA - NO EXCEPTIONS**

**⚠️ CRITICAL: Success only achieved when:**

1. **🚨 MANDATORY: 100% dependency reading** - All files read
2. **🚨 MANDATORY: 100% correct order** - Exact order followed
3. **🚨 MANDATORY: 100% complete chain** - No missing links
4. **🚨 MANDATORY: 100% understanding** - All requirements known

### **🚨 MANDATORY: DEPENDENCY FAILURE PREVENTION - NO EXCEPTIONS**

**⚠️ CRITICAL: Prevent failures by:**

1. **🚨 MANDATORY: Always read dependencies first** - Never skip
2. **🚨 MANDATORY: Always follow exact order** - Never deviate
3. **🚨 MANDATORY: Always validate completeness** - Never assume
4. **🚨 MANDATORY: Always check references** - Never miss

### **🚨 MANDATORY: DEPENDENCY ACCOUNTABILITY - NO EXCEPTIONS**

**⚠️ CRITICAL: Track dependency compliance:**

#### **Dependency Metrics:**
- [ ] **🚨 MANDATORY: Files read count** - Track completeness
- [ ] **🚨 MANDATORY: Order compliance rate** - Track accuracy
- [ ] **🚨 MANDATORY: Reference following rate** - Track precision
- [ ] **🚨 MANDATORY: Understanding completeness** - Track knowledge

#### **Dependency Violations:**
- [ ] **🚨 MANDATORY: Skipped files** - Track missed dependencies
- [ ] **🚨 MANDATORY: Wrong order** - Track sequence violations
- [ ] **🚨 MANDATORY: Missing references** - Track reference violations
- [ ] **🚨 MANDATORY: Incomplete understanding** - Track knowledge gaps

### **🚨 MANDATORY: DEPENDENCY SUCCESS - NO EXCEPTIONS**

**⚠️ CRITICAL: Success only when:**

1. **🚨 MANDATORY: 100% dependency reading** - All files read
2. **🚨 MANDATORY: 100% correct order** - Exact order followed
3. **🚨 MANDATORY: 100% complete chain** - No missing links
4. **🚨 MANDATORY: 100% understanding** - All requirements known

**⚠️ CRITICAL: ANY violation results in immediate failure and restart requirement.**
